{"ast":null,"code":"import _slicedToArray from\"D:/Users/mrren/Global Voices Task/weather_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useCallback}from'react';import{Container,Row,Col,Form,Button,Card}from'react-bootstrap';import TemperatureToggle from'./TempToggle';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Weather=function Weather(){var _weatherData$location;var _useState=useState('Paris'),_useState2=_slicedToArray(_useState,2),searchCity=_useState2[0],setSearchCity=_useState2[1];// Default search criteria\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),weatherData=_useState4[0],setWeatherData=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isCelsius=_useState6[0],setIsCelsius=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),searchSubmitted=_useState10[0],setSearchSubmitted=_useState10[1];var handleSearch=function handleSearch(){setError(null);// Reset error state\nsetSearchSubmitted(true);// Mark search as submitted\nfetch(\"http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=\".concat(searchCity,\"&days=6&aqi=yes&alerts=no\")).then(function(response){return response.json();}).then(function(data){if(data.error){setError(data.error.message);// Handle API error response\n}else{setWeatherData(data);}}).catch(function(error){setError('Error fetching weather data. Please try again later.');// Handle network or other errors\nconsole.error('Error fetching weather data:',error);});};useEffect(function(){handleSearch();},[]);// Include handleSearch as a dependency\n// Condition to prevent onClick execution before search submission\nvar handleButtonClick=function handleButtonClick(){if(searchSubmitted){handleSearch();}};if(error){return/*#__PURE__*/_jsx(\"div\",{children:error});}if(!weatherData){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}var currentWeather=weatherData.current||{};var forecastDays=weatherData.forecast&&weatherData.forecast.forecastday||[];var handleToggle=function handleToggle(unit){setIsCelsius(unit);};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mt-4\",children:\"Weather App\"}),/*#__PURE__*/_jsxs(Form,{className:\"mt-4 mb-4\",children:[/*#__PURE__*/_jsx(Form.Group,{controlId:\"formCity\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter a city\",value:searchCity,onChange:function onChange(e){return setSearchCity(e.target.value);},autoFocus:true})}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleButtonClick,children:\"Search\"})]}),/*#__PURE__*/_jsx(TemperatureToggle,{isCelsius:isCelsius,onToggle:handleToggle}),/*#__PURE__*/_jsxs(\"h2\",{className:\"mt-4\",children:[\"Today's Weather in \",weatherData.location.name]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{lg:12,children:/*#__PURE__*/_jsx(Card,{bg:\"primary\",text:\"white\",className:\"mb-4\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Header,{children:\"Today\"}),/*#__PURE__*/_jsx(Card.Title,{children:/*#__PURE__*/_jsx(\"img\",{src:currentWeather.condition.icon})}),/*#__PURE__*/_jsxs(Card.Text,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Temperature:\",isCelsius?currentWeather.temp_c+'°C':currentWeather.temp_f+'°F',/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Humidity: \",currentWeather.humidity,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wind: \",currentWeather.wind_mph,\" dir: \",currentWeather.wind_dir]})]})]})})})}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"6-Day Weather Forecast for \",(_weatherData$location=weatherData.location)===null||_weatherData$location===void 0?void 0:_weatherData$location.name]}),forecastDays.length===0?/*#__PURE__*/_jsx(\"div\",{children:\"No forecast data available.\"}):/*#__PURE__*/_jsx(Row,{children:forecastDays.map(function(day,index){return/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{bg:\"primary\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:day.date}),/*#__PURE__*/_jsxs(Card.Text,{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"img\",{src:day.day.condition.icon})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Max Temperature: \",isCelsius?day.day.maxtemp_c+'°C':day.day.maxtemp_f+'°F',/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Min Temperature: \",isCelsius?day.day.mintemp_c+'°C':day.day.mintemp_f+'°F',/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Humidity: \",day.day.avghumidity,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Rain Chance: \",day.day.daily_chance_of_rain,\"% \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Snow Chance: \",day.day.daily_chance_of_snow,\"% \"]})]})]})})},index+1);})})]});};export default Weather;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Row","Col","Form","Button","Card","TemperatureToggle","jsx","_jsx","jsxs","_jsxs","Weather","_weatherData$location","_useState","_useState2","_slicedToArray","searchCity","setSearchCity","_useState3","_useState4","weatherData","setWeatherData","_useState5","_useState6","isCelsius","setIsCelsius","_useState7","_useState8","error","setError","_useState9","_useState10","searchSubmitted","setSearchSubmitted","handleSearch","fetch","concat","then","response","json","data","message","catch","console","handleButtonClick","children","currentWeather","current","forecastDays","forecast","forecastday","handleToggle","unit","className","Group","controlId","Control","type","placeholder","value","onChange","e","target","autoFocus","variant","onClick","onToggle","location","name","lg","bg","text","Body","Header","Title","src","condition","icon","Text","temp_c","temp_f","humidity","wind_mph","wind_dir","length","map","day","index","md","date","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","avghumidity","daily_chance_of_rain","daily_chance_of_snow"],"sources":["D:/Users/mrren/Global Voices Task/weather_app/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport TemperatureToggle from './TempToggle';\r\nimport './index.css';\r\n\r\nconst Weather = () => {\r\n  const [searchCity, setSearchCity] = useState('Paris'); // Default search criteria\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [isCelsius, setIsCelsius] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchSubmitted, setSearchSubmitted] = useState(false);\r\n\r\n  const handleSearch = () => {\r\n    setError(null); // Reset error state\r\n    setSearchSubmitted(true); // Mark search as submitted\r\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=6&aqi=yes&alerts=no`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error.message); // Handle API error response\r\n        } else {\r\n          setWeatherData(data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError('Error fetching weather data. Please try again later.'); // Handle network or other errors\r\n        console.error('Error fetching weather data:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    handleSearch();\r\n  }, []); // Include handleSearch as a dependency\r\n  \r\n\r\n  // Condition to prevent onClick execution before search submission\r\n  const handleButtonClick = () => {\r\n    if (searchSubmitted) {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!weatherData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentWeather = weatherData.current || {};\r\n  const forecastDays = (weatherData.forecast && weatherData.forecast.forecastday) || [];\r\n\r\n\r\n  const handleToggle = (unit) => {\r\n    setIsCelsius(unit);\r\n  };\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mt-4\">Weather App</h1>\r\n      <Form className=\"mt-4 mb-4\">\r\n        <Form.Group controlId=\"formCity\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter a city\"\r\n            value={searchCity}\r\n            onChange={(e) => setSearchCity(e.target.value)}\r\n            autoFocus\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={handleButtonClick}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n      <TemperatureToggle isCelsius={isCelsius} onToggle={handleToggle} />\r\n      <h2 className=\"mt-4\">Today's Weather in {weatherData.location.name}</h2>\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Card bg=\"primary\" text=\"white\" className=\"mb-4\">\r\n            <Card.Body>\r\n                <Card.Header>Today</Card.Header>\r\n                <Card.Title>{<img src={currentWeather.condition.icon}></img> }</Card.Title>\r\n                <Card.Text>\r\n                <p>Temperature:{isCelsius ? currentWeather.temp_c + '°C' : currentWeather.temp_f + '°F'}<br /></p>\r\n                <p> Humidity: {currentWeather.humidity}%</p>\r\n\r\n                <p>Wind: {currentWeather.wind_mph} dir: {currentWeather.wind_dir}</p> \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <h2>6-Day Weather Forecast for {weatherData.location?.name}</h2>\r\n      {forecastDays.length === 0 ? (\r\n        <div>No forecast data available.</div>\r\n      ) : (\r\n        <Row>\r\n          {forecastDays.map((day, index) => (\r\n            <Col key={index+1} md={4}>\r\n              <Card bg=\"primary\">\r\n                <Card.Body>\r\n                  <Card.Title>{day.date}</Card.Title>\r\n                  <Card.Text>\r\n                    <p>{<img src={day.day.condition.icon}></img> }</p>\r\n                    <p>Max Temperature: {isCelsius ? day.day.maxtemp_c + '°C' : day.day.maxtemp_f + '°F'}<br /></p>\r\n                    <p>Min Temperature: {isCelsius ? day.day.mintemp_c + '°C' : day.day.mintemp_f + '°F'}<br /></p>\r\n                    <p> Humidity: {day.day.avghumidity}%</p>\r\n                    <p>Rain Chance: {day.day.daily_chance_of_rain}% </p>\r\n                    <p>Snow Chance: {day.day.daily_chance_of_snow}% </p>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}