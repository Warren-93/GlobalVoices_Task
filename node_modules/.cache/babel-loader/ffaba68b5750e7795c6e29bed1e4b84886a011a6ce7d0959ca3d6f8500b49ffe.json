{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\mrren\\\\Global Voices Task\\\\weather_app\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [searchCity, setSearchCity] = useState(\"\");\n  const [weather, setWeather] = useState();\n  const [isCelsius, setIsCelsius] = useState(true);\n  const api = {\n    key: \"ed94ec84f5cd47a1bcf164348231509\",\n    base: \"https://api.weatherapi.com/v1/forecast.json?\",\n    days: \"6\"\n  };\n\n  /* const searchPressed = () => {\r\n      fetch(`${api.base}key=${api.key}&q=${searcCity}&days=${api.days}&aqi=yes).\r\n      then((res) => res.json())\r\n      .then((result) => {\r\n          setWeather(result)\r\n      .catch((error) => console.error('Error fetching weather data:', error));\r\n      }); */\n  const handleSearch = () => {\n    fetch(`${api.base}?${api.key}&q=${api.searchCity}&${api.days}&aqi=yes`).then(response => response.json()).then(result => setWeather(result)).catch(error => console.error('Error fetching weather data:', error));\n    console.log(weather);\n  };\n  useEffect(() => {\n    handleSearch();\n  }, []);\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  const currentWeather = weather.current;\n  //const forecastDays = weather.forecast.forecastday;\n\n  const toggleUnits = () => {\n    setIsCelsius(!isCelsius);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCity\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter a city\",\n          value: searchCity,\n          onChange: e => setSearchCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: [\"Today's Weather in \", weather.location.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: \"primary\",\n          text: \"white\",\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Temperature: \", isCelsius ? currentWeather.temp_c + '°C' : currentWeather.temp_f + '°F', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 103\n              }, this), \"Condition: \", currentWeather.condition.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 59\n              }, this), \"Humidity: \", currentWeather.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"switch\",\n      id: \"toggleUnits\",\n      label: `Toggle to ${isCelsius ? 'Fahrenheit' : 'Celsius'}`,\n      onChange: toggleUnits,\n      className: \"mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"Q8pItyllGZ8wjkc82s8cGgSajaM=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Card","jsxDEV","_jsxDEV","Weather","_s","searchCity","setSearchCity","weather","setWeather","isCelsius","setIsCelsius","api","key","base","days","handleSearch","fetch","then","response","json","result","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","currentWeather","current","toggleUnits","className","Group","controlId","Control","type","placeholder","value","onChange","e","target","variant","onClick","location","name","bg","text","Body","Title","Text","temp_c","temp_f","condition","humidity","Check","id","label","_c","$RefreshReg$"],"sources":["D:/Users/mrren/Global Voices Task/weather_app/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Weather = () => {\r\n\r\n    \r\n  const [searchCity, setSearchCity] = useState(\"\");\r\n  const [weather, setWeather] = useState();\r\n  const [isCelsius, setIsCelsius] = useState(true);\r\n\r\n  const api = {\r\n    key: \"ed94ec84f5cd47a1bcf164348231509\",\r\n    base: \"https://api.weatherapi.com/v1/forecast.json?\",\r\n    days: \"6\"\r\n};\r\n\r\n/* const searchPressed = () => {\r\n    fetch(`${api.base}key=${api.key}&q=${searcCity}&days=${api.days}&aqi=yes).\r\n    then((res) => res.json())\r\n    .then((result) => {\r\n        setWeather(result)\r\n    .catch((error) => console.error('Error fetching weather data:', error));\r\n    }); */\r\n  const handleSearch = () => {\r\n    \r\n    fetch(`${api.base}?${api.key}&q=${api.searchCity}&${api.days}&aqi=yes`)\r\n      .then((response) => response.json())\r\n      .then((result) => setWeather(result))\r\n      .catch((error) => console.error('Error fetching weather data:', error));\r\n      console.log(weather);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, []);\r\n\r\n  if (!weather) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentWeather = weather.current;\r\n  //const forecastDays = weather.forecast.forecastday;\r\n\r\n  const toggleUnits = () => {\r\n    setIsCelsius(!isCelsius);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mt-4\">Weather App</h1>\r\n      <Form className=\"mt-4 mb-4\">\r\n        <Form.Group controlId=\"formCity\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter a city\"\r\n            value={searchCity}\r\n            onChange={(e) => setSearchCity(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={handleSearch}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n      <h2 className=\"mt-4\">Today's Weather in {weather.location.name}</h2>\r\n      <Row>\r\n        <Col>\r\n          <Card bg=\"primary\" text=\"white\" className=\"mb-4\">\r\n            <Card.Body>\r\n              <Card.Title>Today</Card.Title>\r\n              <Card.Text>\r\n                Temperature: {isCelsius ? currentWeather.temp_c + '°C' : currentWeather.temp_f + '°F'}<br />\r\n                Condition: {currentWeather.condition.text}<br />\r\n                Humidity: {currentWeather.humidity}%\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Form.Check\r\n        type=\"switch\"\r\n        id=\"toggleUnits\"\r\n        label={`Toggle to ${isCelsius ? 'Fahrenheit' : 'Celsius'}`}\r\n        onChange={toggleUnits}\r\n        className=\"mb-3\"\r\n      />\r\n     {/*  <h2>5-Day Weather Forecast for {weather.location.name}</h2>\r\n      <Row>\r\n        {forecastDays.map((day, index) => (\r\n          <Col key={index} sm={6} md={4} lg={3}>\r\n            <Card className=\"mb-4\">\r\n              <Card.Body>\r\n                <Card.Title>{day.date}</Card.Title>\r\n                <Card.Text>\r\n                  Max Temperature: {isCelsius ? day.day.maxtemp_c + '°C' : day.day.maxtemp_f + '°F'}<br />\r\n                  Min Temperature: {isCelsius ? day.day.mintemp_c + '°C' : day.day.mintemp_f + '°F'}<br />\r\n                  Condition: {day.day.condition.text}<br />\r\n                  Humidity: {day.day.avghumidity}%\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}