{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\mrren\\\\Global Voices Task\\\\weather_app\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [searchCity, setSearchCity] = useState('');\n  const [weather, setweather] = useState(null);\n  const handleSearch = () => {\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=5&aqi=yes&alerts=no`).then(response => response.json()).then(data => setweather(data)).catch(error => console.error('Error fetching weather data:', error));\n  };\n  useEffect(() => {\n    // Fetch data for a default city (e.g., Paris) on component mount\n    handleSearch();\n  }, []);\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  const currentWeather = weather.current;\n  const forecastDays = weather.forecast.forecastday;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCity\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter a city\",\n          value: searchCity,\n          onChange: e => setSearchCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: [\"Today's Weather in \", weather.location.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: \"primary\",\n          text: \"white\",\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Temperature: \", currentWeather.temp_c, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 55\n              }, this), \"Condition: \", currentWeather.condition.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 59\n              }, this), \"Humidity: \", currentWeather.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"5-Day Weather Forecast for \", weather.location.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: forecastDays.map((day, index) => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: day.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Max Temperature: \", day.day.maxtemp_c, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 57\n              }, this), \"Min Temperature: \", day.day.mintemp_c, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 57\n              }, this), \"Condition: \", day.day.condition.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 54\n              }, this), \"Humidity: \", day.day.avghumidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"W4+ZXsPKiCSXRCj46HIm0XrfLPs=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Card","jsxDEV","_jsxDEV","Weather","_s","searchCity","setSearchCity","weather","setweather","handleSearch","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","currentWeather","current","forecastDays","forecast","forecastday","className","Group","controlId","Control","type","placeholder","value","onChange","e","target","variant","onClick","location","name","bg","text","Body","Title","Text","temp_c","condition","humidity","map","day","index","sm","md","lg","date","maxtemp_c","mintemp_c","avghumidity","_c","$RefreshReg$"],"sources":["D:/Users/mrren/Global Voices Task/weather_app/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\n\r\nconst Weather = () => {\r\n  const [searchCity, setSearchCity] = useState('');\r\n  const [weather, setweather] = useState(null);\r\n\r\n  const handleSearch = () => {\r\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=5&aqi=yes&alerts=no`)\r\n      .then((response) => response.json())\r\n      .then((data) => setweather(data))\r\n      .catch((error) => console.error('Error fetching weather data:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data for a default city (e.g., Paris) on component mount\r\n    handleSearch();\r\n  }, []);\r\n\r\n  if (!weather) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentWeather = weather.current;\r\n  const forecastDays = weather.forecast.forecastday;\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mt-4\">Weather App</h1>\r\n      <Form className=\"mt-4 mb-4\">\r\n        <Form.Group controlId=\"formCity\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter a city\"\r\n            value={searchCity}\r\n            onChange={(e) => setSearchCity(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={handleSearch}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n      <h2 className=\"mt-4\">Today's Weather in {weather.location.name}</h2>\r\n      <Row>\r\n        <Col>\r\n          <Card bg=\"primary\" text=\"white\" className=\"mb-4\">\r\n            <Card.Body>\r\n              <Card.Title>Today</Card.Title>\r\n              <Card.Text>\r\n                Temperature: {currentWeather.temp_c}Â°C<br />\r\n                Condition: {currentWeather.condition.text}<br />\r\n                Humidity: {currentWeather.humidity}%\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <h2>5-Day Weather Forecast for {weather.location.name}</h2>\r\n      <Row>\r\n        {forecastDays.map((day, index) => (\r\n          <Col key={index} sm={6} md={4} lg={3}>\r\n            <Card className=\"mb-4\">\r\n              <Card.Body>\r\n                <Card.Title>{day.date}</Card.Title>\r\n                <Card.Text>\r\n                  Max Temperature: {day.day.maxtemp_c}Â°C<br />\r\n                  Min Temperature: {day.day.mintemp_c}Â°C<br />\r\n                  Condition: {day.day.condition.text}<br />\r\n                  Humidity: {day.day.avghumidity}%\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}