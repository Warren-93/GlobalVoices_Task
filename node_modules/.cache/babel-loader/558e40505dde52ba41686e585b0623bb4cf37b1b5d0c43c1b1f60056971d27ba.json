{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\mrren\\\\Global Voices Task\\\\weather_app\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [searchCity, setSearchCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const handleSearch = () => {\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=5&aqi=yes&alerts=no`).then(response => response.json()).then(data => setWeatherData(data)).catch(error => console.error('Error fetching weather data:', error));\n  };\n  useEffect(() => {\n    // Fetch data for a default city (e.g., Paris) on component mount\n    handleSearch();\n  }, []);\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  const forecastDays = weatherData.forecast.forecastday;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"5-Day Weather Forecast for \", weatherData.location.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a city\",\n        value: searchCity,\n        onChange: e => setSearchCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), forecastDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: day.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Temperature: \", day.day.maxtemp_c, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Min Temperature: \", day.day.mintemp_c, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", day.day.condition.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", day.day.avghumidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"L2ZdOphu8wEfP/kg7RwHa0c46EQ=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Weather","_s","searchCity","setSearchCity","weatherData","setWeatherData","handleSearch","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","forecastDays","forecast","forecastday","location","name","type","placeholder","value","onChange","e","target","onClick","map","day","index","date","maxtemp_c","mintemp_c","condition","text","avghumidity","_c","$RefreshReg$"],"sources":["D:/Users/mrren/Global Voices Task/weather_app/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Weather = () => {\r\n  const [searchCity, setSearchCity] = useState('');\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  const handleSearch = () => {\r\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=5&aqi=yes&alerts=no`)\r\n      .then((response) => response.json())\r\n      .then((data) => setWeatherData(data))\r\n      .catch((error) => console.error('Error fetching weather data:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data for a default city (e.g., Paris) on component mount\r\n    handleSearch();\r\n  }, []);\r\n\r\n  if (!weatherData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const forecastDays = weatherData.forecast.forecastday;\r\n\r\n  return (\r\n    <div>\r\n      <h2>5-Day Weather Forecast for {weatherData.location.name}</h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a city\"\r\n          value={searchCity}\r\n          onChange={(e) => setSearchCity(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n      {forecastDays.map((day, index) => (\r\n        <div key={index}>\r\n          <h3>{day.date}</h3>\r\n          <p>Max Temperature: {day.day.maxtemp_c}°C</p>\r\n          <p>Min Temperature: {day.day.mintemp_c}°C</p>\r\n          <p>Condition: {day.day.condition.text}</p>\r\n          <p>Humidity: {day.day.avghumidity}%</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}