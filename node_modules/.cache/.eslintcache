[{"D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\index.js":"1","D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\App.js":"2","D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\reportWebVitals.js":"3","D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\Weather.js":"4","D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\TempToggle.js":"5","D:\\Global Voices Task_MW\\weather_app\\src\\index.js":"6","D:\\Global Voices Task_MW\\weather_app\\src\\App.js":"7","D:\\Global Voices Task_MW\\weather_app\\src\\Weather.js":"8","D:\\Global Voices Task_MW\\weather_app\\src\\TempToggle.js":"9"},{"size":583,"mtime":1694980402297,"results":"10","hashOfConfig":"11"},{"size":251,"mtime":1694989634677,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1694938195172,"results":"13","hashOfConfig":"11"},{"size":4600,"mtime":1694995926021,"results":"14","hashOfConfig":"11"},{"size":416,"mtime":1694990826696,"results":"15","hashOfConfig":"11"},{"size":516,"mtime":1715205579401,"results":"16","hashOfConfig":"17"},{"size":251,"mtime":1694989634677,"results":"18","hashOfConfig":"17"},{"size":4600,"mtime":1694995926021,"results":"19","hashOfConfig":"17"},{"size":416,"mtime":1694990826696,"results":"20","hashOfConfig":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3x3mjb",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qfd0bs",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\index.js",[],[],"D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\App.js",[],[],"D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\reportWebVitals.js",[],[],"D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\Weather.js",["49","50","51","52"],[],"D:\\Users\\mrren\\Global Voices Task_MW\\weather_app\\src\\TempToggle.js",[],[],"D:\\Global Voices Task_MW\\weather_app\\src\\index.js",[],[],"D:\\Global Voices Task_MW\\weather_app\\src\\App.js",[],[],"D:\\Global Voices Task_MW\\weather_app\\src\\Weather.js",["53","54","55","56"],[],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport TemperatureToggle from './TempToggle';\r\nimport './index.css';\r\n\r\nconst Weather = () => {\r\n  const [searchCity, setSearchCity] = useState('London'); // Default search criteria\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [isCelsius, setIsCelsius] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchSubmitted, setSearchSubmitted] = useState(false);\r\n\r\n  const handleSearch = () => {\r\n    setError(null); // Reset error state\r\n    setSearchSubmitted(true); // Mark search as submitted\r\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=6&aqi=yes&alerts=no`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error.message); // Handle API error response\r\n        } else {\r\n          setWeatherData(data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError('Error fetching weather data. Please try again later.'); // Handle network or other errors\r\n        console.error('Error fetching weather data:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    handleSearch();\r\n  }, []); // Include handleSearch as a dependency\r\n  \r\n\r\n  // Condition to prevent onClick execution before search submission\r\n  const handleButtonClick = () => {\r\n    if (searchSubmitted) {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!weatherData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentWeather = weatherData.current || {};\r\n  const forecastDays = (weatherData.forecast && weatherData.forecast.forecastday) || [];\r\n\r\n\r\n  const handleToggle = (unit) => {\r\n    setIsCelsius(unit);\r\n  };\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mt-4\">Weather App</h1>\r\n      <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col md={4}>\r\n          <Form className=\"d-flex\">\r\n          <Form.Group controlId=\"formCity\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"me-2 rounded-pill\"\r\n              placeholder=\"Enter a city\"\r\n              value={searchCity}\r\n              onChange={(e) => setSearchCity(e.target.value)}\r\n              autoFocus\r\n            />\r\n            </Form.Group>\r\n            <Button className=\"rounded-pill\" variant=\"outline-primary\" onClick={handleButtonClick}>\r\n              Search\r\n            </Button>\r\n          </Form>\r\n          \r\n        </Col>\r\n        <Col sm={8}><TemperatureToggle isCelsius={isCelsius} onToggle={handleToggle} /></Col>\r\n        \r\n      </Row>\r\n    </Container>\r\n\r\n      \r\n      <Row>\r\n        <Col lg={12}>\r\n          <Card bg=\"info\" text=\"white\" className=\"mb-4\">\r\n            <Card.Body>\r\n                <Card.Header>Today</Card.Header>\r\n                <Card.Title>{<img src={currentWeather.condition.icon}></img> }</Card.Title>\r\n                <Card.Text>\r\n                <p>Temperature: {isCelsius ? currentWeather.temp_c + '°C' : currentWeather.temp_f + '°F'}<br /></p>\r\n                <p>Humidity: {currentWeather.humidity}%</p>\r\n                <p>Wind: {currentWeather.wind_mph}mph </p>\r\n                <p>Direction: {currentWeather.wind_dir}</p> \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <h2>6-Day Weather Forecast for {weatherData.location?.name}</h2>\r\n      {forecastDays.length === 0 ? (\r\n        <div>No forecast data available.</div>\r\n      ) : (\r\n        <Row>\r\n          {forecastDays.map((day, index) => (\r\n            <Col key={index+1} md={4}>\r\n              <Card bg=\"dark\">\r\n                <Card.Body>\r\n                  <Card.Title>{day.date}</Card.Title>\r\n                  <Card.Text>\r\n                    <p>{<img src={day.day.condition.icon}></img> }</p>\r\n                    <p>Max Temperature: {isCelsius ? day.day.maxtemp_c + '°C' : day.day.maxtemp_f + '°F'}<br /></p>\r\n                    <p>Min Temperature: {isCelsius ? day.day.mintemp_c + '°C' : day.day.mintemp_f + '°F'}<br /></p>\r\n                    <p>Humidity: {day.day.avghumidity}%</p>\r\n                    <p>Rain Chance: {day.day.daily_chance_of_rain}% </p>\r\n                    <p>Snow Chance: {day.day.daily_chance_of_snow}% </p>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","D:\\Global Voices Task_MW\\weather_app\\src\\TempToggle.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":1,"column":38,"nodeType":"59","messageId":"60","endLine":1,"endColumn":49},{"ruleId":"61","severity":1,"message":"62","line":34,"column":6,"nodeType":"63","endLine":34,"endColumn":8,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":95,"column":30,"nodeType":"67","endLine":95,"endColumn":71},{"ruleId":"65","severity":1,"message":"66","line":118,"column":25,"nodeType":"67","endLine":118,"endColumn":59},{"ruleId":"57","severity":1,"message":"58","line":1,"column":38,"nodeType":"59","messageId":"60","endLine":1,"endColumn":49},{"ruleId":"61","severity":1,"message":"62","line":34,"column":6,"nodeType":"63","endLine":34,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"66","line":95,"column":30,"nodeType":"67","endLine":95,"endColumn":71},{"ruleId":"65","severity":1,"message":"66","line":118,"column":25,"nodeType":"67","endLine":118,"endColumn":59},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.","ArrayExpression",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["70"],{"desc":"71","fix":"72"},{"desc":"71","fix":"73"},"Update the dependencies array to be: [handleSearch]",{"range":"74","text":"75"},{"range":"76","text":"75"},[1324,1326],"[handleSearch]",[1324,1326]]