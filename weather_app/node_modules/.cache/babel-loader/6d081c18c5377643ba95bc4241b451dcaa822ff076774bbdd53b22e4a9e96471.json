{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\mrren\\\\Global Voices Task\\\\weather_app\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [searchCity, setSearchCity] = useState('');\n  const [weatherData, setWeatherData] = useState();\n  const [isCelsius, setIsCelsius] = useState(true);\n  const handleSearch = () => {\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=5&aqi=yes&alerts=no`).then(response => response.json()).then(data => setWeatherData(data)).catch(error => console.error('Error fetching weather data:', error));\n  };\n  useEffect(() => {\n    // Fetch data for a default city (e.g., Paris) on component mount\n    handleSearch();\n  }, []);\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  const currentWeather = weatherData.current;\n  const forecastDays = weatherData.forecast && weatherData.forecast.forecastday; // Check if forecast exists\n\n  if (!forecastDays) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  const toggleUnits = () => {\n    setIsCelsius(!isCelsius);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCity\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter a city\",\n          value: searchCity,\n          onChange: e => setSearchCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: [\"Today's Weather in \", weatherData.location.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: \"primary\",\n          text: \"white\",\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Temperature: \", isCelsius ? currentWeather.temp_c + '°C' : currentWeather.temp_f + '°F', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 103\n              }, this), \"Condition: \", currentWeather.condition.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 59\n              }, this), \"Humidity: \", currentWeather.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"switch\",\n      id: \"toggleUnits\",\n      label: `Toggle to ${isCelsius ? 'Fahrenheit' : 'Celsius'}`,\n      onChange: toggleUnits,\n      className: \"mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"5-Day Weather Forecast for \", weatherData.location.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: forecastDays.map((day, index) => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: day.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Max Temperature: \", isCelsius ? day.day.maxtemp_c + '°C' : day.day.maxtemp_f + '°F', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 101\n              }, this), \"Min Temperature: \", isCelsius ? day.day.mintemp_c + '°C' : day.day.mintemp_f + '°F', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 101\n              }, this), \"Condition: \", day.day.condition.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 54\n              }, this), \"Humidity: \", day.day.avghumidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"zt2sDwasf91kcunkd3Mm61WFVcQ=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Card","jsxDEV","_jsxDEV","Weather","_s","searchCity","setSearchCity","weatherData","setWeatherData","isCelsius","setIsCelsius","handleSearch","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","currentWeather","current","forecastDays","forecast","forecastday","toggleUnits","className","Group","controlId","Control","type","placeholder","value","onChange","e","target","variant","onClick","location","name","bg","text","Body","Title","Text","temp_c","temp_f","condition","humidity","Check","id","label","map","day","index","sm","md","lg","date","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","avghumidity","_c","$RefreshReg$"],"sources":["D:/Users/mrren/Global Voices Task/weather_app/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\n\r\nconst Weather = () => {\r\n  const [searchCity, setSearchCity] = useState('');\r\n  const [weatherData, setWeatherData] = useState();\r\n  const [isCelsius, setIsCelsius] = useState(true);\r\n\r\n  const handleSearch = () => {\r\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=ed94ec84f5cd47a1bcf164348231509&q=${searchCity}&days=5&aqi=yes&alerts=no`)\r\n      .then((response) => response.json())\r\n      .then((data) => setWeatherData(data))\r\n      .catch((error) => console.error('Error fetching weather data:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data for a default city (e.g., Paris) on component mount\r\n    handleSearch();\r\n  }, []);\r\n\r\n  if (!weatherData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentWeather = weatherData.current;\r\n  const forecastDays = weatherData.forecast && weatherData.forecast.forecastday; // Check if forecast exists\r\n  \r\n  if (!forecastDays) {\r\n    return <div>No forecast data available.</div>;\r\n  }\r\n\r\n  const toggleUnits = () => {\r\n    setIsCelsius(!isCelsius);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mt-4\">Weather App</h1>\r\n      <Form className=\"mt-4 mb-4\">\r\n        <Form.Group controlId=\"formCity\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter a city\"\r\n            value={searchCity}\r\n            onChange={(e) => setSearchCity(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={handleSearch}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n      <h2 className=\"mt-4\">Today's Weather in {weatherData.location.name}</h2>\r\n      <Row>\r\n        <Col>\r\n          <Card bg=\"primary\" text=\"white\" className=\"mb-4\">\r\n            <Card.Body>\r\n              <Card.Title>Today</Card.Title>\r\n              <Card.Text>\r\n                Temperature: {isCelsius ? currentWeather.temp_c + '°C' : currentWeather.temp_f + '°F'}<br />\r\n                Condition: {currentWeather.condition.text}<br />\r\n                Humidity: {currentWeather.humidity}%\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Form.Check\r\n        type=\"switch\"\r\n        id=\"toggleUnits\"\r\n        label={`Toggle to ${isCelsius ? 'Fahrenheit' : 'Celsius'}`}\r\n        onChange={toggleUnits}\r\n        className=\"mb-3\"\r\n      />\r\n      <h2>5-Day Weather Forecast for {weatherData.location.name}</h2>\r\n      <Row>\r\n        {forecastDays.map((day, index) => (\r\n          <Col key={index} sm={6} md={4} lg={3}>\r\n            <Card className=\"mb-4\">\r\n              <Card.Body>\r\n                <Card.Title>{day.date}</Card.Title>\r\n                <Card.Text>\r\n                  Max Temperature: {isCelsius ? day.day.maxtemp_c + '°C' : day.day.maxtemp_f + '°F'}<br />\r\n                  Min Temperature: {isCelsius ? day.day.mintemp_c + '°C' : day.day.mintemp_f + '°F'}<br />\r\n                  Condition: {day.day.condition.text}<br />\r\n                  Humidity: {day.day.avghumidity}%\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}